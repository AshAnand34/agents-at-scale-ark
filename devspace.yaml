# DevSpace configuration for local ARK services development
version: v2beta1

# Hooks for pre-build setup
hooks:
  - command: ./services/ark-api/ark-api/scripts/ensure-ark-sdk-wheel.sh
    events: ["before:dev"]

# Deployment pipelines define the workflow for different commands
pipelines:
  # 'devspace deploy' - Build and deploy production images
  deploy: |-
    build_images --all
    create_deployments --all

  # 'devspace dev' - DevSpace recommended dev workflow: deploy production, override with dev images, file sync  
  dev: |-
    create_deployments --all
    start_dev --all

# Image build configuration  
images:
  ark-api:
    image: ark-api
    dockerfile: ./services/ark-api/Dockerfile
    context: ./services/ark-api
    target: production

  ark-dashboard:
    image: ark-dashboard  
    dockerfile: ./services/ark-dashboard/Dockerfile
    context: ./services/ark-dashboard
    target: production

  ark-controller:
    image: controller
    dockerfile: ./ark/Dockerfile
    context: ./ark
    target: production

# Kubernetes deployments
deployments:
  ark-api:
    namespace: default
    helm:
      chart:
        path: ./services/ark-api/chart
      values:
        app:
          image:
            repository: ${runtime.images.ark-api.image}
            tag: ${runtime.images.ark-api.tag}
          # Override resources for in-cluster local development - API with live reload needs more memory and CPU than production
          resources:
            limits:
              memory: "1024Mi"
              cpu: "1000m"
            requests:
              memory: "256Mi"
              cpu: "200m"

  ark-dashboard:
    namespace: default
    helm:
      chart:
        path: ./services/ark-dashboard/chart
      values:
        app:
          image:
            repository: ${runtime.images.ark-dashboard.image}
            tag: ${runtime.images.ark-dashboard.tag}
          # Override resources for in-cluster local development - Next.js + Turbopack compilation needs 3GB+ memory and 2 CPU cores for fast builds
          resources:
            limits:
              memory: "3072Mi"
              cpu: "2000m"
            requests:
              memory: "256Mi"
              cpu: "200m"

  ark-controller:
    namespace: ark-system
    helm:
      chart:
        path: ./ark/dist/chart
      values:
        controllerManager:
          container:
            image:
              repository: ${runtime.images.ark-controller.image}
              tag: ${runtime.images.ark-controller.tag}
            # Override resources for in-cluster local development - controller with live reload needs more memory and CPU than production
            resources:
              limits:
                memory: "2048Mi"
                cpu: "2000m"
              requests:
                memory: "256Mi"
                cpu: "200m"
          # Override security context for development - allow root for dev images
          securityContext:
            runAsNonRoot: false

# Development configuration - active during 'devspace dev'
dev:
  ark-api:
    imageSelector: ark-api
    devImage: python:3.12-slim
    # Install dependencies and start API server with hot reload
    command: ["sh", "-c", "cd /app && apt-get update && apt-get install -y curl && curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash && pip install uv && uv add file://$(ls wheels/ark_sdk-*.whl) && uv sync && uv run uvicorn ark_api.main:app --host 0.0.0.0 --port 8000 --reload"]
    namespace: default
    # Stream logs instead of terminal
    logs:
      lastLines: 50
    # File synchronization for hot reload - pyproject.toml excluded from back-sync after uv add modifies it
    sync:
      - path: ./services/ark-api/ark-api:/app
        startContainer: true
        disableDownload: true
        excludePaths:
          - .venv
          - __pycache__/
          - "*.pyc"
      - path: ./ark:/workspace
        excludePaths:
          - bin/
          - out/
          - .git/
    # Enable SSH for IDE integration
    ssh:
      enabled: true

  ark-controller:
    imageSelector: controller
    devImage: golang:1.24-bookworm
    command: ["sh", "-c", "cd /workspace && go run cmd/main.go --leader-elect=false"]
    namespace: ark-system
    # Stream logs instead of terminal
    logs:
      lastLines: 50
    # File synchronization for hot reload
    sync:
      - path: ./ark:/workspace
        startContainer: true
        excludePaths:
          - bin/
          - out/
          - .git/
          - "*.log"
    # Enable SSH for IDE integration
    ssh:
      enabled: true

  ark-dashboard:
    imageSelector: ark-dashboard
    devImage: node:24-alpine
    command: ["sh", "-c", "cd /app && npm install -g pnpm && pnpm install && pnpm run dev"]
    namespace: default
    # Stream logs instead of terminal
    logs:
      lastLines: 50
    # File synchronization for hot reload
    sync:
      - path: ./services/ark-dashboard/ark-dashboard:/app
        startContainer: true
        excludePaths:
          - node_modules/
          - .next/
          - .git/
          - "*.log"
    # Enable SSH for IDE integration
    ssh:
      enabled: true